{"ast":null,"code":"var _jsxFileName = \"/Users/jackbourne/Documents/Springboard/react-jokes-classes 2/src/JokeListClassComponent.js\";\nimport React from 'react';\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass JokeListClass extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jokes: []\n    };\n    this.getNewJokes = this.getNewJokes.bind(this);\n    this.resetVotes = this.resetVotes.bind(this);\n    this.toggleLock = this.toggleLock.bind(this);\n    this.vote = this.vote.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.state.jokes.length);\n    if (this.state.jokes.length <= 0) this.getJokes();\n  }\n\n  componentDidUpdate() {\n    if (this.state.jokes.length <= 0) this.getJokes();\n  }\n\n  async getJokes() {\n    let jokes = this.state.jokes;\n    let numJokesToGet = 10;\n    let jokeVotes = JSON.parse(window.localStorage.getItem(\"jokeVotes\") || \"{}\");\n    let seenJokes = new Set(jokes.map(j => j.id));\n\n    while (jokes.length < numJokesToGet) {\n      let res = await axios.get(\"https://icanhazdadjoke.com\", {\n        headers: {\n          Accept: \"application/json\"\n        }\n      });\n      let {\n        status,\n        ...joke\n      } = res.data;\n\n      if (!seenJokes.has(joke.id)) {\n        seenJokes.add(joke.id);\n        jokeVotes[joke.id] = jokeVotes[joke.id] || 0;\n        jokes.push({ ...joke,\n          votes: jokeVotes[joke.id],\n          locked: false\n        });\n      } else {\n        console.log(\"duplicate found!\");\n      }\n\n      console.log(jokes);\n      console.log(joke);\n      jokes.push(joke);\n    }\n\n    this.setState({\n      jokes: jokes\n    });\n    console.log(this.state.jokes);\n  }\n\n  getNewJokes() {\n    this.setState({\n      jokes: []\n    });\n    console.log(this.state.jokes);\n  }\n\n  resetVotes() {\n    window.localStorage.setItem(\"jokeVotes\", \"{}\");\n    this.setState(st => ({\n      jokes: st.jokes.map(joke => ({ ...joke,\n        votes: 0\n      }))\n    }));\n  }\n  /* change vote for this id by delta (+1 or -1) */\n\n\n  vote(id, delta) {\n    let jokeVotes = JSON.parse(window.localStorage.getItem(\"jokeVotes\"));\n    jokeVotes[id] = (jokeVotes[id] || 0) + delta;\n    window.localStorage.setItem(\"jokeVotes\", JSON.stringify(jokeVotes));\n    this.setState(st => ({\n      jokes: st.jokes.map(j => j.id === id ? { ...j,\n        votes: j.votes + delta\n      } : j)\n    }));\n  }\n\n  toggleLock(id) {\n    this.setState(st => ({\n      jokes: st.jokes.map(j => j.id === id ? { ...j,\n        locked: !j.locked\n      } : j)\n    }));\n  } // generateNewJokes() {\n  //     this.setState({\n  //     })\n  // }\n\n\n  render() {\n    let sortedJokes = [...this.state.jokes].sort((a, b) => b.votes - a.votes);\n    let allLocked = sortedJokes.filter(j => j.locked).length === this.props.numJokesToGet;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"JokeList\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"JokeList-getmore\",\n        onClick: this.generateNewJokes,\n        disabled: allLocked,\n        children: \"Get New Jokes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"JokeList-getmore\",\n        onClick: this.resetVotes,\n        children: \"Reset Vote Counts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), sortedJokes.map(j => /*#__PURE__*/_jsxDEV(Joke, {\n        text: j.joke,\n        id: j.id,\n        votes: j.votes,\n        vote: this.vote,\n        locked: j.locked,\n        toggleLock: this.toggleLock\n      }, j.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this)), sortedJokes.length < this.props.numJokesToGet ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-4x fa-spinner fa-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default JokeListClass;","map":{"version":3,"sources":["/Users/jackbourne/Documents/Springboard/react-jokes-classes 2/src/JokeListClassComponent.js"],"names":["React","axios","Joke","JokeListClass","Component","constructor","props","state","jokes","getNewJokes","bind","resetVotes","toggleLock","vote","componentDidMount","console","log","length","getJokes","componentDidUpdate","numJokesToGet","jokeVotes","JSON","parse","window","localStorage","getItem","seenJokes","Set","map","j","id","res","get","headers","Accept","status","joke","data","has","add","push","votes","locked","setState","setItem","st","delta","stringify","render","sortedJokes","sort","a","b","allLocked","filter","generateNewJokes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\n\n\n\nclass JokeListClass extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          jokes: []\n        };\n        this.getNewJokes = this.getNewJokes.bind(this)\n        this.resetVotes = this.resetVotes.bind(this);\n        this.toggleLock = this.toggleLock.bind(this);\n        this.vote = this.vote.bind(this);\n       \n        \n        \n        \n    }\n\n    componentDidMount() {\n        console.log(this.state.jokes.length)\n        if (this.state.jokes.length <= 0) this.getJokes();\n      }\n      componentDidUpdate() {\n        if (this.state.jokes.length <= 0) this.getJokes();\n      }\n    \n \nasync getJokes() {\n    \n    \n  \n\n    let jokes = this.state.jokes;\n   let numJokesToGet = 10\n   let jokeVotes = JSON.parse(\n    window.localStorage.getItem(\"jokeVotes\") || \"{}\"\n  );\n  let seenJokes = new Set(jokes.map(j => j.id));\n\n\n\n\n    while (jokes.length < numJokesToGet) {\n    let res = await axios.get(\"https://icanhazdadjoke.com\", {\n        headers: { Accept: \"application/json\" }\n      });\n      let { status, ...joke } = res.data;\n\n      if (!seenJokes.has(joke.id)) {\n        seenJokes.add(joke.id);\n        jokeVotes[joke.id] = jokeVotes[joke.id] || 0;\n        jokes.push({ ...joke, votes: jokeVotes[joke.id], locked: false });\n      } else {\n        console.log(\"duplicate found!\");\n      }\n    \n      console.log(jokes)\n      console.log(joke)\n\n      jokes.push(joke)\n      \n      \n    \n    }\n    this.setState({jokes: jokes})\n    console.log(this.state.jokes)\n\n\n\n    \n   \n}\ngetNewJokes () {\n    this.setState({jokes: [] })\n    console.log(this.state.jokes)\n     \n  \n}\n\nresetVotes() {\n    window.localStorage.setItem(\"jokeVotes\", \"{}\");\n    this.setState(st => ({\n      jokes: st.jokes.map(joke => ({ ...joke, votes: 0 }))\n    }));\n  }\n\n  /* change vote for this id by delta (+1 or -1) */\n\n  vote(id, delta) {\n    let jokeVotes = JSON.parse(window.localStorage.getItem(\"jokeVotes\"));\n    jokeVotes[id] = (jokeVotes[id] || 0) + delta;\n    window.localStorage.setItem(\"jokeVotes\", JSON.stringify(jokeVotes));\n    this.setState(st => ({\n      jokes: st.jokes.map(j =>\n        j.id === id ? { ...j, votes: j.votes + delta } : j\n      )\n    }));\n  }\n\n  toggleLock(id) {\n    this.setState(st => ({\n      jokes: st.jokes.map(j => (j.id === id ? { ...j, locked: !j.locked } : j))\n    }));\n  }\n\n\n\n\n\n       \n    // generateNewJokes() {\n    //     this.setState({\n\n    //     })\n    // }\n    render() {\n      let sortedJokes = [...this.state.jokes].sort((a, b) => b.votes - a.votes);\n      let allLocked =\n        sortedJokes.filter(j => j.locked).length === this.props.numJokesToGet;\n  \n      return (\n        <div className=\"JokeList\">\n          <button\n            className=\"JokeList-getmore\"\n            onClick={this.generateNewJokes}\n            disabled={allLocked}\n          >\n            Get New Jokes\n          </button>\n          <button className=\"JokeList-getmore\" onClick={this.resetVotes}>\n            Reset Vote Counts\n          </button>\n  \n          {sortedJokes.map(j => (\n            <Joke\n              text={j.joke}\n              key={j.id}\n              id={j.id}\n              votes={j.votes}\n              vote={this.vote}\n              locked={j.locked}\n              toggleLock={this.toggleLock}\n            />\n          ))}\n  \n          {sortedJokes.length < this.props.numJokesToGet ? (\n            <div className=\"loading\">\n              <i className=\"fas fa-4x fa-spinner fa-spin\" />\n            </div>\n          ) : null}\n        </div>\n      );\n    }\n  }\nexport default JokeListClass;"]},"metadata":{},"sourceType":"module"}