{"ast":null,"code":"var _jsxFileName = \"/Users/jackbourne/Documents/Springboard/react-jokes-classes 2/src/JokeListClassComponent.js\";\nimport React from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass JokeListClass extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jokes: []\n    };\n    this.getNewJokes = this.getNewJokes.bind(this);\n    this.resetVotes = this.resetVotes.bind(this);\n    this.toggleLock = this.toggleLock.bind(this);\n    this.vote = this.vote.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.state.jokes.length);\n    if (this.state.jokes.length <= 0) this.getJokes();\n  }\n\n  componentDidUpdate() {\n    if (this.state.jokes.length <= 0) this.getJokes();\n  }\n\n  async getJokes() {\n    let j = [...this.state.jokes];\n    let numJokesToGet = 10; //    let seenJokes = new Set(j.map(j => j.id));\n\n    while (j.length < numJokesToGet) {\n      let res = await axios.get(\"https://icanhazdadjoke.com\", {\n        headers: {\n          Accept: \"application/json\"\n        }\n      });\n      let {\n        status,\n        ...jokeObj\n      } = res.data;\n      console.log(jokeObj);\n      j.push(jokeObj);\n    }\n\n    this.setState({\n      jokes: j\n    });\n    console.log(this.state.jokes);\n  }\n\n  getNewJokes() {\n    this.setState({\n      jokes: []\n    });\n    console.log(this.state.jokes);\n  }\n\n  resetVotes() {\n    window.localStorage.setItem(\"jokeVotes\", \"{}\");\n    this.setState(st => ({\n      jokes: st.jokes.map(joke => ({ ...joke,\n        votes: 0\n      }))\n    }));\n  }\n  /* change vote for this id by delta (+1 or -1) */\n\n\n  vote(id, delta) {\n    let jokeVotes = JSON.parse(window.localStorage.getItem(\"jokeVotes\"));\n    jokeVotes[id] = (jokeVotes[id] || 0) + delta;\n    window.localStorage.setItem(\"jokeVotes\", JSON.stringify(jokeVotes));\n    this.setState(st => ({\n      jokes: st.jokes.map(j => j.id === id ? { ...j,\n        votes: j.votes + delta\n      } : j)\n    }));\n  }\n\n  toggleLock(id) {\n    this.setState(st => ({\n      jokes: st.jokes.map(j => j.id === id ? { ...j,\n        locked: !j.locked\n      } : j)\n    }));\n  } // generateNewJokes() {\n  //     this.setState({\n  //     })\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"JokeList\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"JokeList-getmore\",\n        onClick: this.getNewJokes,\n        children: \"Get New Jokes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), this.state.jokes.map(j => /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: j\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default JokeListClass;","map":{"version":3,"sources":["/Users/jackbourne/Documents/Springboard/react-jokes-classes 2/src/JokeListClassComponent.js"],"names":["React","axios","JokeListClass","Component","constructor","props","state","jokes","getNewJokes","bind","resetVotes","toggleLock","vote","componentDidMount","console","log","length","getJokes","componentDidUpdate","j","numJokesToGet","res","get","headers","Accept","status","jokeObj","data","push","setState","window","localStorage","setItem","st","map","joke","votes","id","delta","jokeVotes","JSON","parse","getItem","stringify","locked","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from \"axios\";\n\n\n\nclass JokeListClass extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {jokes: [] }\n        this.getNewJokes = this.getNewJokes.bind(this)\n        this.resetVotes = this.resetVotes.bind(this);\n        this.toggleLock = this.toggleLock.bind(this);\n        this.vote = this.vote.bind(this);\n       \n        \n        \n        \n    }\n\n    componentDidMount() {\n        console.log(this.state.jokes.length)\n        if (this.state.jokes.length <= 0) this.getJokes();\n      }\n      componentDidUpdate() {\n        if (this.state.jokes.length <= 0) this.getJokes();\n      }\n    \n \nasync getJokes() {\n    \n    \n  \n\n    let j = [...this.state.jokes];\n   let numJokesToGet = 10\n//    let seenJokes = new Set(j.map(j => j.id));\n\n    while (j.length < numJokesToGet) {\n    let res = await axios.get(\"https://icanhazdadjoke.com\", {\n        headers: { Accept: \"application/json\" }\n      });\n      let { status, ...jokeObj } = res.data;\n      console.log(jokeObj)\n\n      j.push(jokeObj)\n      \n    \n    }\n    this.setState({jokes: j})\n    console.log(this.state.jokes)\n\n\n\n    \n   \n}\ngetNewJokes () {\n    this.setState({jokes: [] })\n    console.log(this.state.jokes)\n     \n  \n}\n\nresetVotes() {\n    window.localStorage.setItem(\"jokeVotes\", \"{}\");\n    this.setState(st => ({\n      jokes: st.jokes.map(joke => ({ ...joke, votes: 0 }))\n    }));\n  }\n\n  /* change vote for this id by delta (+1 or -1) */\n\n  vote(id, delta) {\n    let jokeVotes = JSON.parse(window.localStorage.getItem(\"jokeVotes\"));\n    jokeVotes[id] = (jokeVotes[id] || 0) + delta;\n    window.localStorage.setItem(\"jokeVotes\", JSON.stringify(jokeVotes));\n    this.setState(st => ({\n      jokes: st.jokes.map(j =>\n        j.id === id ? { ...j, votes: j.votes + delta } : j\n      )\n    }));\n  }\n\n  toggleLock(id) {\n    this.setState(st => ({\n      jokes: st.jokes.map(j => (j.id === id ? { ...j, locked: !j.locked } : j))\n    }));\n  }\n\n\n\n\n\n       \n    // generateNewJokes() {\n    //     this.setState({\n\n    //     })\n    // }\n    render() {\n\n        return (\n            <div className=\"JokeList\">\n            <button className=\"JokeList-getmore\" onClick={this.getNewJokes} >\n              Get New Jokes\n            </button>\n            {this.state.jokes.map(j => (\n                <h1>{j}</h1>\n        ))}\n            \n      \n          </div>\n        )\n    }\n}\nexport default JokeListClass;"]},"metadata":{},"sourceType":"module"}