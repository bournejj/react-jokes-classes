{"ast":null,"code":"var _jsxFileName = \"/Users/jackbourne/Documents/Springboard/react-jokes-classes 2/src/JokeListClassComponent.js\";\nimport React from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass JokeListClass extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jokes: []\n    };\n    this.getNewJokes = this.getNewJokes.bind(this);\n    this.resetVotes = this.resetVotes.bind(this);\n    this.toggleLock = this.toggleLock.bind(this);\n    this.vote = this.vote.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.state.jokes.length);\n    if (this.state.jokes.length <= 0) this.getJokes();\n  }\n\n  componentDidUpdate() {\n    if (this.state.jokes.length <= 0) this.getJokes();\n  }\n\n  async getJokes() {\n    let j = [...this.state.jokes];\n    let numJokesToGet = 10;\n\n    while (j.length < numJokesToGet) {\n      let res = await axios.get(\"https://icanhazdadjoke.com\", {\n        headers: {\n          Accept: \"application/json\"\n        }\n      });\n      let {\n        status,\n        ...joke\n      } = res.data;\n\n      if (!seenJokes.has(joke.id)) {\n        seenJokes.add(joke.id);\n        jokeVotes[joke.id] = jokeVotes[joke.id] || 0;\n        j.push({ ...joke,\n          votes: jokeVotes[joke.id],\n          locked: false\n        });\n      } else {\n        console.log(\"duplicate found!\");\n      }\n    }\n\n    this.setState({\n      jokes\n    });\n    window.localStorage.setItem(\"jokeVotes\", JSON.stringify(jokeVotes));\n  }\n\n  catch(e) {\n    console.log(e);\n  }\n\n  getNewJokes() {\n    this.setState({\n      jokes: []\n    });\n    console.log(this.state.jokes);\n  }\n\n  resetVotes() {\n    window.localStorage.setItem(\"jokeVotes\", \"{}\");\n    this.setState(st => ({\n      jokes: st.jokes.map(joke => ({ ...joke,\n        votes: 0\n      }))\n    }));\n  }\n  /* change vote for this id by delta (+1 or -1) */\n\n\n  vote(id, delta) {\n    let jokeVotes = JSON.parse(window.localStorage.getItem(\"jokeVotes\"));\n    jokeVotes[id] = (jokeVotes[id] || 0) + delta;\n    window.localStorage.setItem(\"jokeVotes\", JSON.stringify(jokeVotes));\n    this.setState(st => ({\n      jokes: st.jokes.map(j => j.id === id ? { ...j,\n        votes: j.votes + delta\n      } : j)\n    }));\n  }\n\n  toggleLock(id) {\n    this.setState(st => ({\n      jokes: st.jokes.map(j => j.id === id ? { ...j,\n        locked: !j.locked\n      } : j)\n    }));\n  } // generateNewJokes() {\n  //     this.setState({\n  //     })\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"JokeList\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"JokeList-getmore\",\n        onClick: this.getNewJokes,\n        children: \"Get New Jokes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this), this.state.jokes.map(j => /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: j\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default JokeListClass;","map":{"version":3,"sources":["/Users/jackbourne/Documents/Springboard/react-jokes-classes 2/src/JokeListClassComponent.js"],"names":["React","axios","JokeListClass","Component","constructor","props","state","jokes","getNewJokes","bind","resetVotes","toggleLock","vote","componentDidMount","console","log","length","getJokes","componentDidUpdate","j","numJokesToGet","res","get","headers","Accept","status","joke","data","seenJokes","has","id","add","jokeVotes","push","votes","locked","setState","window","localStorage","setItem","JSON","stringify","catch","e","st","map","delta","parse","getItem","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAIA,MAAMC,aAAN,SAA4BF,KAAK,CAACG,SAAlC,CAA4C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAb;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKG,IAAL,GAAY,KAAKA,IAAL,CAAUH,IAAV,CAAe,IAAf,CAAZ;AAKH;;AAEDI,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWC,KAAX,CAAiBS,MAA7B;AACA,QAAI,KAAKV,KAAL,CAAWC,KAAX,CAAiBS,MAAjB,IAA2B,CAA/B,EAAkC,KAAKC,QAAL;AACnC;;AACDC,EAAAA,kBAAkB,GAAG;AACnB,QAAI,KAAKZ,KAAL,CAAWC,KAAX,CAAiBS,MAAjB,IAA2B,CAA/B,EAAkC,KAAKC,QAAL;AACnC;;AAGO,QAARA,QAAQ,GAAG;AAKb,QAAIE,CAAC,GAAG,CAAC,GAAG,KAAKb,KAAL,CAAWC,KAAf,CAAR;AACD,QAAIa,aAAa,GAAG,EAApB;;AAEC,WAAOD,CAAC,CAACH,MAAF,GAAWI,aAAlB,EAAiC;AACjC,UAAIC,GAAG,GAAG,MAAMpB,KAAK,CAACqB,GAAN,CAAU,4BAAV,EAAwC;AACpDC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV;AAD2C,OAAxC,CAAhB;AAIA,UAAI;AAAEC,QAAAA,MAAF;AAAU,WAAGC;AAAb,UAAsBL,GAAG,CAACM,IAA9B;;AAEA,UAAI,CAACC,SAAS,CAACC,GAAV,CAAcH,IAAI,CAACI,EAAnB,CAAL,EAA6B;AAC3BF,QAAAA,SAAS,CAACG,GAAV,CAAcL,IAAI,CAACI,EAAnB;AACAE,QAAAA,SAAS,CAACN,IAAI,CAACI,EAAN,CAAT,GAAqBE,SAAS,CAACN,IAAI,CAACI,EAAN,CAAT,IAAsB,CAA3C;AACAX,QAAAA,CAAC,CAACc,IAAF,CAAO,EAAE,GAAGP,IAAL;AAAWQ,UAAAA,KAAK,EAAEF,SAAS,CAACN,IAAI,CAACI,EAAN,CAA3B;AAAsCK,UAAAA,MAAM,EAAE;AAA9C,SAAP;AACD,OAJD,MAIO;AACLrB,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD;AACF;;AAED,SAAKqB,QAAL,CAAc;AAAE7B,MAAAA;AAAF,KAAd;AACA8B,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,WAA5B,EAAyCC,IAAI,CAACC,SAAL,CAAeT,SAAf,CAAzC;AACD;;AAACU,EAAAA,KAAK,CAAEC,CAAF,EAAK;AACV7B,IAAAA,OAAO,CAACC,GAAR,CAAY4B,CAAZ;AACD;;AAIDnC,EAAAA,WAAW,GAAI;AACX,SAAK4B,QAAL,CAAc;AAAC7B,MAAAA,KAAK,EAAE;AAAR,KAAd;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWC,KAAvB;AAGH;;AAEDG,EAAAA,UAAU,GAAG;AACT2B,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,WAA5B,EAAyC,IAAzC;AACA,SAAKH,QAAL,CAAcQ,EAAE,KAAK;AACnBrC,MAAAA,KAAK,EAAEqC,EAAE,CAACrC,KAAH,CAASsC,GAAT,CAAanB,IAAI,KAAK,EAAE,GAAGA,IAAL;AAAWQ,QAAAA,KAAK,EAAE;AAAlB,OAAL,CAAjB;AADY,KAAL,CAAhB;AAGD;AAED;;;AAEAtB,EAAAA,IAAI,CAACkB,EAAD,EAAKgB,KAAL,EAAY;AACd,QAAId,SAAS,GAAGQ,IAAI,CAACO,KAAL,CAAWV,MAAM,CAACC,YAAP,CAAoBU,OAApB,CAA4B,WAA5B,CAAX,CAAhB;AACAhB,IAAAA,SAAS,CAACF,EAAD,CAAT,GAAgB,CAACE,SAAS,CAACF,EAAD,CAAT,IAAiB,CAAlB,IAAuBgB,KAAvC;AACAT,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,WAA5B,EAAyCC,IAAI,CAACC,SAAL,CAAeT,SAAf,CAAzC;AACA,SAAKI,QAAL,CAAcQ,EAAE,KAAK;AACnBrC,MAAAA,KAAK,EAAEqC,EAAE,CAACrC,KAAH,CAASsC,GAAT,CAAa1B,CAAC,IACnBA,CAAC,CAACW,EAAF,KAASA,EAAT,GAAc,EAAE,GAAGX,CAAL;AAAQe,QAAAA,KAAK,EAAEf,CAAC,CAACe,KAAF,GAAUY;AAAzB,OAAd,GAAiD3B,CAD5C;AADY,KAAL,CAAhB;AAKD;;AAEDR,EAAAA,UAAU,CAACmB,EAAD,EAAK;AACb,SAAKM,QAAL,CAAcQ,EAAE,KAAK;AACnBrC,MAAAA,KAAK,EAAEqC,EAAE,CAACrC,KAAH,CAASsC,GAAT,CAAa1B,CAAC,IAAKA,CAAC,CAACW,EAAF,KAASA,EAAT,GAAc,EAAE,GAAGX,CAAL;AAAQgB,QAAAA,MAAM,EAAE,CAAChB,CAAC,CAACgB;AAAnB,OAAd,GAA4ChB,CAA/D;AADY,KAAL,CAAhB;AAGD,GAtFyC,CA6FxC;AACA;AAEA;AACA;;;AACA8B,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACA;AAAQ,QAAA,SAAS,EAAC,kBAAlB;AAAqC,QAAA,OAAO,EAAE,KAAKzC,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAIC,KAAKF,KAAL,CAAWC,KAAX,CAAiBsC,GAAjB,CAAqB1B,CAAC,iBACnB;AAAA,kBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,cADH,CAJD;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AAhHuC;;AAkH5C,eAAejB,aAAf","sourcesContent":["import React from 'react';\nimport axios from \"axios\";\n\n\n\nclass JokeListClass extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {jokes: [] }\n        this.getNewJokes = this.getNewJokes.bind(this)\n        this.resetVotes = this.resetVotes.bind(this);\n        this.toggleLock = this.toggleLock.bind(this);\n        this.vote = this.vote.bind(this);\n       \n        \n        \n        \n    }\n\n    componentDidMount() {\n        console.log(this.state.jokes.length)\n        if (this.state.jokes.length <= 0) this.getJokes();\n      }\n      componentDidUpdate() {\n        if (this.state.jokes.length <= 0) this.getJokes();\n      }\n    \n \nasync getJokes() {\n    \n    \n  \n\n    let j = [...this.state.jokes];\n   let numJokesToGet = 10\n   \n    while (j.length < numJokesToGet) {\n    let res = await axios.get(\"https://icanhazdadjoke.com\", {\n        headers: { Accept: \"application/json\" }\n      });\n \n    let { status, ...joke } = res.data;\n\n    if (!seenJokes.has(joke.id)) {\n      seenJokes.add(joke.id);\n      jokeVotes[joke.id] = jokeVotes[joke.id] || 0;\n      j.push({ ...joke, votes: jokeVotes[joke.id], locked: false });\n    } else {\n      console.log(\"duplicate found!\");\n    }\n  }\n\n  this.setState({ jokes });\n  window.localStorage.setItem(\"jokeVotes\", JSON.stringify(jokeVotes));\n} catch (e) {\n  console.log(e);\n}\n    \n   \n\ngetNewJokes () {\n    this.setState({jokes: [] })\n    console.log(this.state.jokes)\n     \n  \n}\n\nresetVotes() {\n    window.localStorage.setItem(\"jokeVotes\", \"{}\");\n    this.setState(st => ({\n      jokes: st.jokes.map(joke => ({ ...joke, votes: 0 }))\n    }));\n  }\n\n  /* change vote for this id by delta (+1 or -1) */\n\n  vote(id, delta) {\n    let jokeVotes = JSON.parse(window.localStorage.getItem(\"jokeVotes\"));\n    jokeVotes[id] = (jokeVotes[id] || 0) + delta;\n    window.localStorage.setItem(\"jokeVotes\", JSON.stringify(jokeVotes));\n    this.setState(st => ({\n      jokes: st.jokes.map(j =>\n        j.id === id ? { ...j, votes: j.votes + delta } : j\n      )\n    }));\n  }\n\n  toggleLock(id) {\n    this.setState(st => ({\n      jokes: st.jokes.map(j => (j.id === id ? { ...j, locked: !j.locked } : j))\n    }));\n  }\n\n\n\n\n\n       \n    // generateNewJokes() {\n    //     this.setState({\n\n    //     })\n    // }\n    render() {\n\n        return (\n            <div className=\"JokeList\">\n            <button className=\"JokeList-getmore\" onClick={this.getNewJokes} >\n              Get New Jokes\n            </button>\n            {this.state.jokes.map(j => (\n                <h1>{j}</h1>\n        ))}\n            \n      \n          </div>\n        )\n    }\n}\nexport default JokeListClass;"]},"metadata":{},"sourceType":"module"}